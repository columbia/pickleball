services:
  pickleball-generate:
    image: pickleball-generate
    build:
      dockerfile: Dockerfile.generate
    volumes:
      - .:/pickleball
    command: /bin/bash

  pickleball-enforce:
    image: pickleball-enforce
    build:
      context: enforce
      dockerfile: Dockerfile

  pickleball-enforce-deb11:
    image: pickleball-enforce-deb11
    build:
      context: enforce
      dockerfile: Dockerfile.deb11

  # Evaluate all libraries by generating loading policies
  generate-all:
    image: pickleball-generate
    depends_on:
      - pickleball-generate
    volumes:
      - .:/pickleball
    command: /pickleball/evaluation/policy-evaluation.sh

  #
  # Evaluate enforcement of loading policies
  #
  enforce-all:
    image: pickleball-enforce
    command: ["echo", "All model load tests completed"]
    depends_on:
      enforce-conch:
        condition: service_completed_successfully
      enforce-flagembedding:
        condition: service_completed_successfully
      enforce-flair:
        condition: service_completed_successfully
      enforce-gliner:
        condition: service_completed_successfully
      enforce-huggingsound:
        condition: service_completed_successfully
      enforce-languagebind:
        condition: service_completed_successfully
      enforce-melotts:
        condition: service_completed_successfully
      enforce-parrot:
        condition: service_completed_successfully
      enforce-pyannote:
        condition: service_completed_successfully
      enforce-pysentimiento:
        condition: service_completed_successfully
      enforce-sentencetransformers:
        condition: service_completed_successfully
      enforce-superimage:
        condition: service_completed_successfully
      enforce-tner:
        condition: service_completed_successfully
      enforce-tweetnlp:
        condition: service_completed_successfully
      enforce-yolov5:
        condition: service_completed_successfully
      enforce-yolov11:
        condition: service_completed_successfully

  enforce-conch:
    image: pickleball-enforce-conch
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.conch
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/conch.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/conch/CoCa --library conch

  enforce-flagembedding:
    image: pickleball-enforce-flagembedding
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.flagembedding
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/flagembedding.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flagembedding/FlagModel --library flagembedding

  enforce-flair:
    image: pickleball-enforce-flair
    build:
      context: ./evaluation/enforcement/
      dockerfile: Dockerfile.flair
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/flair.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flair/ --library flair

  enforce-gliner:
    image: pickleball-enforce-gliner
    build:
      context: ./evaluation/
      dockerfile: enforcement/Dockerfile.gliner
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/gliner.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/gliner/GliNER --library gliner

  enforce-huggingsound:
    image: pickleball-enforce-huggingsound
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.huggingsound
    depends_on:
      - pickleball-enforce-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/huggingsound.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/huggingsound/SpeechRecognitionModel --library huggingsound

  enforce-languagebind:
    image: pickleball-enforce-languagebind
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.languagebind
    depends_on:
      - pickleball-enforce-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/languagebind.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/languagebind/LanguageBind --library languagebind

  enforce-melotts:
    image: pickleball-enforce-melotts
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.melotts
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/melotts.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/melo/TTS --library melotts

  enforce-parrot:
    image: pickleball-enforce-parrot
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.parrot
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/parrot.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/Parrot/Parrot --library parrot

  enforce-pyannote:
    image: pickleball-enforce-pyannote
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.pyannote
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/pyannote.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pyannote-audio/Model --library pyannote

  enforce-pysentimiento:
    image: pickleball-enforce-pysentimiento
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.pysentimiento
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/pysentimiento.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pysentimiento/BaseAnalyzer --library pysentimiento

  enforce-sentencetransformers:
    image: pickleball-enforce-sentencetransformers
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.sentencetransformers
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/sentencetransformers.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/sentence-transformers/SequenceTransformer --library sentencetransformers --allowed-patterns "pytorch_model.bin"

  enforce-superimage:
    image: pickleball-enforce-superimage
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.superimage
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/superimage.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/super-image/EdsrModel --library superimage --allowed-patterns "*.pt"

  enforce-tner:
    image: pickleball-enforce-tner
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.tner
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/tner.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/tner/TransformersNER --library tner

  enforce-tweetnlp:
    image: pickleball-enforce-tweetnlp
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.tweetnlp
    depends_on:
      - pickleball-enforce-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/tweetnlp.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/tweetnlp/Classifier --library tweetnlp

  enforce-yolov5:
    image: pickleball-enforce-yolov5
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov5
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov5.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov5 --library yolov5

  enforce-yolov11:
    image: pickleball-enforce-yolov11
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov11
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov11.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov11 --library yolov11

  #
  # Control - Ensure all models load with the regular Pickle Machine
  # (no PickleBall policies or enforcement)
  #
  control-load:
    image: control-load
    build:
      context: evaluation/control
      dockerfile: Dockerfile

  control-load-deb11:
    image: control-load-deb11
    build:
      context: evaluation/control
      dockerfile: Dockerfile.deb11

  control-load-all:
    image: control-load
    command: ["echo", "All model load tests completed"]
    depends_on:
      control-load-conch:
        condition: service_completed_successfully
      control-load-flagembedding:
        condition: service_completed_successfully
      control-load-flair:
        condition: service_completed_successfully
      control-load-gliner:
        condition: service_completed_successfully
      control-load-huggingsound:
        condition: service_completed_successfully
      control-load-languagebind:
        condition: service_completed_successfully
      control-load-melotts:
        condition: service_completed_successfully
      control-load-parrot:
        condition: service_completed_successfully
      control-load-pyannote:
        condition: service_completed_successfully
      control-load-pysentimiento:
        condition: service_completed_successfully
      control-load-sentencetransformers:
        condition: service_completed_successfully
      control-load-superimage:
        condition: service_completed_successfully
      control-load-tner:
        condition: service_completed_successfully
      control-load-tweetnlp:
        condition: service_completed_successfully
      control-load-yolov5:
        condition: service_completed_successfully
      control-load-yolov11:
        condition: service_completed_successfully

  control-load-conch:
    image: control-load-conch
    build:
      context: ./evaluation/
      dockerfile: ./control/Dockerfile.conch
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/conch/CoCa --library conch --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-flagembedding:
    image: control-load-flagembedding
    build:
      context: ./evaluation/
      dockerfile: ./control/Dockerfile.flagembedding
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flagembedding/FlagModel --library flagembedding --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-flair:
    image: control-load-flair
    build:
      context: evaluation
      dockerfile: control/Dockerfile.flair
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flair --library flair --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-gliner:
    image: control-load-gliner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.gliner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/gliner/GliNER --library gliner --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-huggingsound:
    image: control-load-huggingsound
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.huggingsound
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/huggingsound/SpeechRecognitionModel --library huggingsound --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-languagebind:
    image: control-load-languagebind
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.languagebind
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/languagebind/LanguageBind --library languagebind --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-melotts:
    image: control-load-melotts
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.melotts
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/melo/TTS --library melotts --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-parrot:
    image: control-load-parrot
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.parrot
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/Parrot/Parrot --library parrot --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-pyannote:
    image: control-load-pyannote
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pyannote
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pyannote-audio/Model --library pyannote --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-pysentimiento:
    image: control-load-pysentimiento
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pysentimiento
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pysentimiento/BaseAnalyzer --library pysentimiento --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-sentencetransformers:
    image: control-load-sentencetransformers
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.sentencetransformers
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/sentence-transformers/SequenceTransformer --library sentencetransformers --allowed-patterns "pytorch_model.bin" --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-superimage:
    image: control-load-superimage
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.superimage
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/super-image/EdsrModel --library superimage --allowed-patterns "*.pt" --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-tner:
    image: control-load-tner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/tner/TransformersNER --library tner --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-tweetnlp:
    image: control-load-tweetnlp
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tweetnlp
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/tweetnlp/Classifier --library tweetnlp --disable-verify --output-dir /pickleball/evaluation/control/results

  control-load-yolov5:
    image: control-load-yolov5
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov5
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov5/ --library yolov5 --disable-verify --allowed-patterns "*.pt" --output-dir /pickleball/evaluation/control/results

  control-load-yolov11:
    image: control-load-yolov11
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov11
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov11/ --library yolov11 --disable-verify --allowed-patterns "*.pt" --output-dir /pickleball/evaluation/control/results

  check-vulnerable-all:
    image: control-load
    command: ["echo", "All model load tests completed"]
    depends_on:
      check-vulnerable-conch:
        condition: service_completed_successfully
      check-vulnerable-flagembedding:
        condition: service_completed_successfully
      check-vulnerable-flair:
        condition: service_completed_successfully
      check-vulnerable-gliner:
        condition: service_completed_successfully
      check-vulnerable-huggingsound:
        condition: service_completed_successfully
      check-vulnerable-languagebind:
        condition: service_completed_successfully
      check-vulnerable-melotts:
        condition: service_completed_successfully
      check-vulnerable-parrot:
        condition: service_completed_successfully
      check-vulnerable-pyannote:
        condition: service_completed_successfully
      check-vulnerable-pysentimiento:
        condition: service_completed_successfully
      check-vulnerable-sentencetransformers:
        condition: service_completed_successfully
      check-vulnerable-superimage:
        condition: service_completed_successfully
      check-vulnerable-tner:
        condition: service_completed_successfully
      check-vulnerable-tweetnlp:
        condition: service_completed_successfully
      check-vulnerable-yolov5:
        condition: service_completed_successfully
      check-vulnerable-yolov11:
        condition: service_completed_successfully

  check-vulnerable-conch:
    image: control-load-conch
    build:
      context: evaluation
      dockerfile: control/Dockerfile.conch
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadconch.py --model-path /models/malicious/synthetic/conch/MahmoodLab-CONCH-backdoor/pytorch_model.bin"

  check-vulnerable-flagembedding:
    image: control-load-flagembedding
    build:
      context: evaluation
      dockerfile: control/Dockerfile.flagembedding
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadflagembedding.py --model-path /models/malicious/synthetic/flagembedding/bge-base-en/pytorch_model.bin"

  check-vulnerable-flair:
    image: control-load-flair
    build:
      context: evaluation
      dockerfile: control/Dockerfile.flair
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadflair.py --model-path /models/malicious/synthetic/flair/chunk-english-fast-backdoor/pytorch_model.bin"

  check-vulnerable-gliner:
    image: control-load-gliner
    build:
      context: evaluation/
      dockerfile: control/Dockerfile.gliner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadgliner.py --model-path /models/malicious/synthetic/gliner/gliner_small-v2.1-backdoor/pytorch_model.bin"

  check-vulnerable-huggingsound:
    image: control-load-huggingsound
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.huggingsound
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadhuggingsound.py --model-path /models/malicious/synthetic/huggingsound/wav2vec2-large-xlsr-53-arabic-backdoor/pytorch_model.bin"

  check-vulnerable-languagebind:
    image: control-load-languagebind
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.languagebind
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadlanguagebind.py --model-path /models/malicious/synthetic/languagebind/LanguageBind_Audio-backdoor/pytorch_model.bin"

  check-vulnerable-melotts:
    image: control-load-melotts
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.melotts
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadmelotts.py --model-path /models/malicious/synthetic/melotts/backdoor-backdoor-MeloTTS-English/checkpoint.pth"

  check-vulnerable-parrot:
    image: control-load-parrot
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.parrot
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadparrot.py --model-path /models/malicious/synthetic/parrot/parrot_paraphraser_on_T5-backdoor/pytorch_model.bin"

  check-vulnerable-pyannote:
    image: control-load-pyannote
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pyannote
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadpyannote.py --model-path /models/malicious/synthetic/pyannote/wespeaker-voxceleb-resnet34-LM-backdoor/pytorch_model.bin"

  check-vulnerable-pysentimiento:
    image: control-load-pysentimiento
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pysentimiento
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadpysentimiento.py --model-path /models/malicious/synthetic/pysentimiento/robertuito-ner-backdoor/pytorch_model.bin"

  check-vulnerable-sentencetransformers:
    image: control-load-sentencetransformers
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.sentencetransformers
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadsentencetransformers.py --model-path /models/malicious/synthetic/sentencetransformers/bge-small-en-backdoor/pytorch_model.bin"

  check-vulnerable-superimage:
    image: control-load-superimage
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.superimage
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadsuperimage.py --model-path /models/malicious/synthetic/superimage/edsr-backdoor/pytorch_model_2x.pt"

  check-vulnerable-tner:
    image: control-load-tner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadtner.py --model-path /models/malicious/synthetic/tner/roberta-large-ontonotes5-backdoor/pytorch_model.bin"

  check-vulnerable-tweetnlp:
    image: control-load-tweetnlp
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tweetnlp
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadtweetnlp.py --model-path /models/malicious/synthetic/tweetnlp/twitter-xlm-roberta-base-sentiment-multilingual/pytorch_model.bin"

  check-vulnerable-yolov5:
    image: control-load-yolov5
    build:
      context: evaluation/
      dockerfile: control/Dockerfile.yolov5
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadyolov5.py --model-path /models/malicious/synthetic/yolov5/yolov5m-smoke-backdoor/best.pt"

  check-vulnerable-yolov11:
    image: control-load-yolov11
    build:
      context: evaluation/
      dockerfile: control/Dockerfile.yolov11
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "cd /pickleball && python3 evaluation/enforcement/loadyolov11.py --model-path /models/malicious/synthetic/yolov11/ariakang-YOLOv11n-face-detection-backdoor/model.pt"

  weightsonly-load-all:
    image: control-load
    command: ["echo", "All model load tests completed"]
    depends_on:
      weightsonly-load-conch:
        condition: service_completed_successfully
      weightsonly-load-flagembedding:
        condition: service_completed_successfully
      weightsonly-load-flair:
        condition: service_completed_successfully
      weightsonly-load-gliner:
        condition: service_completed_successfully
      weightsonly-load-huggingsound:
        condition: service_completed_successfully
      weightsonly-load-languagebind:
        condition: service_completed_successfully
      weightsonly-load-melotts:
        condition: service_completed_successfully
      weightsonly-load-parrot:
        condition: service_completed_successfully
      weightsonly-load-pyannote:
        condition: service_completed_successfully
      weightsonly-load-pysentimiento:
        condition: service_completed_successfully
      weightsonly-load-sentencetransformers:
        condition: service_completed_successfully
      weightsonly-load-superimage:
        condition: service_completed_successfully
      weightsonly-load-tner:
        condition: service_completed_successfully
      weightsonly-load-tweetnlp:
        condition: service_completed_successfully
      weightsonly-load-yolov5:
        condition: service_completed_successfully
      weightsonly-load-yolov11:
        condition: service_completed_successfully

  weightsonly-load-conch:
    image: weightsonly-load-conch
    build:
      context: ./evaluation/
      dockerfile: ./control/Dockerfile.conch
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/conch/CoCa --library conch --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-flagembedding:
    image: weightsonly-load-flagembedding
    build:
      context: ./evaluation/
      dockerfile: ./control/Dockerfile.flagembedding
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flagembedding/FlagModel --library flagembedding --disable-verify --output-dir /pickleball/weights-only/results-benign"

  weightsonly-load-flair:
    image: weightsonly-load-flair
    build:
      context: evaluation
      dockerfile: control/Dockerfile.flair
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flair/ --library flair --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-gliner:
    image: weightsonly-load-gliner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.gliner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/gliner/GliNER --library gliner --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-huggingsound:
    image: weightsonly-load-huggingsound
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.huggingsound
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/huggingsound/SpeechRecognitionModel --library huggingsound --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-languagebind:
    image: weightsonly-load-languagebind
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.languagebind
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/languagebind/LanguageBind --library languagebind --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-melotts:
    image: weightsonly-load-melotts
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.melotts
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/melo/TTS --library melotts --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-parrot:
    image: weightsonly-load-parrot
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.parrot
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/Parrot/Parrot --library parrot --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-pyannote:
    image: weightsonly-load-pyannote
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pyannote
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pyannote-audio/Model --library pyannote --disable-verify --output-dir /pickleball/evaluation/weights-onlyresults-benign"

  weightsonly-load-pysentimiento:
    image: weightsonly-load-pysentimiento
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pysentimiento
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pysentimiento/BaseAnalyzer --library pysentimiento --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-sentencetransformers:
    image: weightsonly-load-sentencetransformers
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.sentencetransformers
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/sentence-transformers/SequenceTransformer --library sentencetransformers --allowed-patterns \"pytorch_model.bin\" --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-superimage:
    image: weightsonly-load-superimage
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.superimage
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/super-image/EdsrModel --library superimage --allowed-patterns \"*.pt\" --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-tner:
    image: weightsonly-load-tner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/tner/TransformersNER --library tner --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-tweetnlp:
    image: weightsonly-load-tweetnlp
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tweetnlp
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/tweetnlp/Classifier --library tweetnlp --disable-verify --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-yolov5:
    image: weightsonly-load-yolov5
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov5
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov5/ --library yolov5 --disable-verify --allowed-patterns \"*.pt\" --output-dir /pickleball/evaluation/weights-only/results-benign"

  weightsonly-load-yolov11:
    image: weightsonly-load-yolov11
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov11
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
    command: /bin/sh -c "TORCH_FORCE_WEIGHTS_ONLY_LOAD=true /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov11/ --library yolov11 --disable-verify --allowed-patterns \"*.pt\" --output-dir /pickleball/evaluation/weights-only/results-benign"

  control-validate-all:
    image: control-load
    command: ["echo", "All control model validation tests completed"]
    depends_on:
      control-validate-flair:
        condition: service_completed_successfully
      control-validate-pyannote:
        condition: service_completed_successfully
      control-validate-yolov11:
        condition: service_completed_successfully

  control-validate-flair:
    image: control-load-flair
    build:
      context: evaluation
      dockerfile: control/Dockerfile.flair
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.flair-success --library flair --disable-verify --validate --output-dir /pickleball/evaluation/control/results-validation/

  control-validate-pyannote:
    image: control-load-pyannote
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pyannote
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.pyannote-success --library pyannote --disable-verify --validate --output-dir /pickleball/evaluation/control/results-validation/

  control-validate-yolov5:
    image: control-load-yolov5
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov5
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.yolov5-success --library yolov5 --disable-verify --allowed-patterns "*.pt" --validate --output-dir /pickleball/evaluation/control/results-validation/

  control-validate-yolov11:
    image: control-load-yolov11
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov11
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.yolov11-success --library yolov11 --disable-verify --allowed-patterns "*.pt" --validate --output-dir /pickleball/evaluation/control/results-validation/

  pickleball-validate-all:
    image: pickleball-enforce
    command: ["echo", "All pickleball model validation tests completed"]
    depends_on:
      pickleball-validate-flair:
        condition: service_completed_successfully
      pickleball-validate-pyannote:
        condition: service_completed_successfully
      pickleball-validate-yolov5:
        condition: service_completed_successfully
      pickleball-validate-yolov11:
        condition: service_completed_successfully

  pickleball-validate-flair:
    image: pickleball-enforce-flair
    build:
      context: ./evaluation/enforcement/
      dockerfile: Dockerfile.flair
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/flair.json:/root/policies/policy.json
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.flair-success  --library flair --validate --output-dir /pickleball/evaluation/enforcement/results-validation/

  pickleball-validate-pyannote:
    image: pickleball-enforce-pyannote
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.pyannote
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/pyannote.json:/root/policies/policy.json
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.pyannote-success --library pyannote --validate --output-dir /pickleball/evaluation/enforcement/results-validation/

  pickleball-validate-yolov5:
    image: pickleball-enforce-yolov5
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov5
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov5.json:/root/policies/policy.json
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.yolov5-success --library yolov5 --validate --output-dir /pickleball/evaluation/enforcement/results-validation/

  pickleball-validate-yolov11:
    image: pickleball-enforce-yolov11
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov11
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov11.json:/root/policies/policy.json
      - ${DATASETS}:/datasets
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --models-file /pickleball/evaluation/enforcement/.yolov11-success --library yolov11 --validate --output-dir /pickleball/evaluation/enforcement/results-validation/

  #
  # Ablation - Enforce policies without lazy loading
  # (only need to run on libraries with stub modules)
  #
  strict-all:
    image: ablation-strict-enforce
    command: ["echo", "All model load tests completed"]
    depends_on:
      strict-flair:
        condition: service_completed_successfully
      strict-pyannote:
        condition: service_completed_successfully
      strict-yolov5:
        condition: service_completed_successfully
      strict-yolov11:
        condition: service_completed_successfully

  strict-flair:
    image: strict-enforce-flair
    build:
      context: evaluation
      dockerfile: ablation/Dockerfile.flair
    depends_on:
      - pickleball-enforce
      - enforce-flair
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/flair.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flair/ --library flair --output-dir /pickleball/evaluation/ablation/results-strict

  strict-pyannote:
    image: strict-enforce-pyannote
    build:
      context: evaluation
      dockerfile: ablation/Dockerfile.pyannote
    depends_on:
      - pickleball-enforce
      - enforce-pyannote
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/pyannote.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pyannote-audio/Model --library pyannote --output-dir /pickleball/evaluation/ablation/results-strict

  strict-yolov5:
    image: strict-enforce-yolov5
    build:
      context: evaluation
      dockerfile: ablation/Dockerfile.yolov5
    depends_on:
      - pickleball-enforce
      - enforce-yolov5
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov5.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov5 --library yolov5 --output-dir /pickleball/evaluation/ablation/results-strict

  strict-yolov11:
    image: strict-enforce-yolov11
    build:
      context: evaluation
      dockerfile: ablation/Dockerfile.yolov11
    depends_on:
      - pickleball-enforce
      - enforce-yolov11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov11.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov11 --library yolov11 --output-dir /pickleball/evaluation/ablation/results-strict

  #
  # Evaluate WOUp policy enforced with PickleBall lazy enforcement
  #
  lazy-wou-all:
    image: pickleball-enforce
    command: ["echo", "All model load tests completed"]
    depends_on:
      lazy-wou-flair:
        condition: service_completed_successfully
      lazy-wou-pyannote:
        condition: service_completed_successfully
      lazy-wou-yolov5:
        condition: service_completed_successfully
      lazy-wou-yolov11:
        condition: service_completed_successfully

  lazy-wou-flair:
    image: pickleball-enforce-flair
    build:
      context: ./evaluation/enforcement/
      dockerfile: Dockerfile.flair
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/ablation/policies/flair.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/flair/ --library flair --output-dir /pickleball/evaluation/ablation/results-lazy-wou/

  lazy-wou-pyannote:
    image: pickleball-enforce-pyannote
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.pyannote
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/ablation/policies/pyannote.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/pyannote-audio/Model --library pyannote --output-dir /pickleball/evaluation/ablation/results-lazy-wou/

  lazy-wou-yolov5:
    image: pickleball-enforce-yolov5
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov5
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/ablation/policies/yolov5.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov5 --library yolov5 --output-dir /pickleball/evaluation/ablation/results-lazy-wou/

  lazy-wou-yolov11:
    image: pickleball-enforce-yolov11
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov11
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/ablation/policies/yolov11.json:/root/policies/policy.json
      - .:/pickleball
    command: /pickleball/evaluation/enforcement/load_all.py --all-model-path /models/benign/yolov11 --library yolov11 --output-dir /pickleball/evaluation/ablation/results-lazy-wou/

  ## Load time measurements
  load-time:
    image: pickleball-enforce
    command: ["echo", "All model load time tests completed"]
    depends_on:
      control-load-time-conch:
        condition: service_completed_successfully
      control-load-time-flagembedding:
        condition: service_completed_successfully
      control-load-time-flair:
        condition: service_completed_successfully
      control-load-time-gliner:
        condition: service_completed_successfully
      control-load-time-huggingsound:
        condition: service_completed_successfully
      control-load-time-languagebind:
        condition: service_completed_successfully
      control-load-time-melotts:
        condition: service_completed_successfully
      control-load-time-parrot:
        condition: service_completed_successfully
      control-load-time-pyannote:
        condition: service_completed_successfully
      control-load-time-pysentimiento:
        condition: service_completed_successfully
      control-load-time-sentencetransformers:
        condition: service_completed_successfully
      control-load-time-superimage:
        condition: service_completed_successfully
      control-load-time-tner:
        condition: service_completed_successfully
      control-load-time-tweetnlp:
        condition: service_completed_successfully
      control-load-time-yolov5:
        condition: service_completed_successfully
      control-load-time-yolov11:
        condition: service_completed_successfully
      enforce-load-time-conch:
        condition: service_completed_successfully
      enforce-load-time-flagembedding:
        condition: service_completed_successfully
      enforce-load-time-flair:
        condition: service_completed_successfully
      enforce-load-time-gliner:
        condition: service_completed_successfully
      enforce-load-time-huggingsound:
        condition: service_completed_successfully
      enforce-load-time-languagebind:
        condition: service_completed_successfully
      enforce-load-time-melotts:
        condition: service_completed_successfully
      enforce-load-time-parrot:
        condition: service_completed_successfully
      enforce-load-time-pyannote:
        condition: service_completed_successfully
      enforce-load-time-pysentimiento:
        condition: service_completed_successfully
      enforce-load-time-sentencetransformers:
        condition: service_completed_successfully
      enforce-load-time-superimage:
        condition: service_completed_successfully
      enforce-load-time-tner:
        condition: service_completed_successfully
      enforce-load-time-tweetnlp:
        condition: service_completed_successfully
      enforce-load-time-yolov5:
        condition: service_completed_successfully
      enforce-load-time-yolov11:
        condition: service_completed_successfully

  control-load-time-conch:
    image: control-load-time-conch
    build:
      context: ./evaluation/
      dockerfile: ./control/Dockerfile.conch
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/conch/CoCa --output-dir /results/times.csv

  control-load-time-flagembedding:
    image: control-load-time-flagembedding
    build:
      context: ./evaluation/
      dockerfile: ./control/Dockerfile.flagembedding
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/flagembedding/FlagModel --output-dir /results/times.csv

  control-load-time-flair:
    image: control-load-time-flair
    build:
      context: evaluation
      dockerfile: control/Dockerfile.flair
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/flair/SequenceTagger --output-dir /results/times.csv

  control-load-time-gliner:
    image: control-load-time-gliner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.gliner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/gliner/GliNER --output-dir /results/times.csv

  control-load-time-huggingsound:
    image: control-load-time-huggingsound
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.huggingsound
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/huggingsound/SpeechRecognitionModel --output-dir /results/times.csv

  control-load-time-languagebind:
    image: control-load-time-languagebind
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.languagebind
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/languagebind/LanguageBind --output-dir /results/times.csv

  control-load-time-melotts:
    image: control-load-time-melotts
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.melotts
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/melo/TTS --output-dir /results/times.csv

  control-load-time-parrot:
    image: control-load-time-parrot
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.parrot
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/Parrot/Parrot --output-dir /results/times.csv

  control-load-time-pyannote:
    image: control-load-time-pyannote
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pyannote
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/pyannote-audio/Model --output-dir /results/times.csv

  control-load-time-pysentimiento:
    image: control-load-time-pysentimiento
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.pysentimiento
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/pysentimiento/BaseAnalyzer --output-dir /results/times.csv

  control-load-time-sentencetransformers:
    image: control-load-time-sentencetransformers
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.sentencetransformers
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/sentence-transformers/SequenceTransformer --allowed-patterns "pytorch_model.bin" --output-dir /results/times.csv

  control-load-time-superimage:
    image: control-load-time-superimage
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.superimage
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/super-image/EdsrModel --output-dir /results/times.csv

  control-load-time-tner:
    image: control-load-time-tner
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tner
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/tner/TransformersNER --output-dir /results/times.csv

  control-load-time-tweetnlp:
    image: control-load-time-tweetnlp
    build:
      context: ./evaluation/
      dockerfile: control/Dockerfile.tweetnlp
    depends_on:
      - control-load-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/tweetnlp/Classifier --output-dir /results/times.csv

  control-load-time-yolov5:
    image: control-load-time-yolov5
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov5
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/yolov5/ --output-dir /results/times.csv

  control-load-time-yolov11:
    image: control-load-time-yolov11
    build:
      context: evaluation
      dockerfile: control/Dockerfile.yolov11
    depends_on:
      - control-load
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/yolov11/ --output-dir /results/times.csv

  enforce-load-time-conch:
    image: pickleball-enforce-load-time-conch
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.conch
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/conch.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/conch/CoCa  --output-dir /results/times.csv

  enforce-load-time-flagembedding:
    image: pickleball-enforce-load-time-flagembedding
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.flagembedding
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/flagembedding.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/flagembedding/FlagModel  --output-dir /results/times.csv

  enforce-load-time-flair:
    image: pickleball-enforce-load-time-flair
    build:
      context: ./evaluation/enforcement/
      dockerfile: Dockerfile.flair
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/flair.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/flair/SequenceTagger/  --output-dir /results/times.csv

  enforce-load-time-gliner:
    image: pickleball-enforce-load-time-gliner
    build:
      context: ./evaluation/
      dockerfile: enforcement/Dockerfile.gliner
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/gliner.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/gliner/GliNER  --output-dir /results/times.csv

  enforce-load-time-huggingsound:
    image: pickleball-enforce-load-time-huggingsound
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.huggingsound
    depends_on:
      - pickleball-enforce-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/huggingsound.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/huggingsound/SpeechRecognitionModel  --output-dir /results/times.csv

  enforce-load-time-languagebind:
    image: pickleball-enforce-load-time-languagebind
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.languagebind
    depends_on:
      - pickleball-enforce-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/languagebind.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/languagebind/LanguageBind  --output-dir /results/times.csv

  enforce-load-time-melotts:
    image: pickleball-enforce-load-time-melotts
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.melotts
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/melotts.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/melo/TTS  --output-dir /results/times.csv

  enforce-load-time-parrot:
    image: pickleball-enforce-load-time-parrot
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.parrot
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/parrot.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/Parrot/Parrot  --output-dir /results/times.csv

  enforce-load-time-pyannote:
    image: pickleball-enforce-load-time-pyannote
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.pyannote
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/pyannote.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/pyannote-audio/Model  --output-dir /results/times.csv

  enforce-load-time-pysentimiento:
    image: pickleball-enforce-load-time-pysentimiento
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.pysentimiento
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/pysentimiento.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/pysentimiento/BaseAnalyzer  --output-dir /results/times.csv

  enforce-load-time-sentencetransformers:
    image: pickleball-enforce-load-time-sentencetransformers
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.sentencetransformers
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/sentencetransformers.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/sentence-transformers/SequenceTransformer --allowed-patterns "pytorch_model.bin" --output-dir /results/times.csv

  enforce-load-time-superimage:
    image: pickleball-enforce-load-time-superimage
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.superimage
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/superimage.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/super-image/EdsrModel --allowed-patterns "*.pt" --output-dir /results/times.csv

  enforce-load-time-tner:
    image: pickleball-enforce-load-time-tner
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.tner
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/tner.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/tner/TransformersNER --output-dir /results/times.csv

  enforce-load-time-tweetnlp:
    image: pickleball-enforce-load-time-tweetnlp
    build:
      context: ./evaluation/
      dockerfile: ./enforcement/Dockerfile.tweetnlp
    depends_on:
      - pickleball-enforce-deb11
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/tweetnlp.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/tweetnlp/Classifier --output-dir /results/times.csv

  enforce-load-time-yolov5:
    image: pickleball-enforce-load-time-yolov5
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov5
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov5.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/yolov5 --output-dir /results/times.csv

  enforce-load-time-yolov11:
    image: pickleball-enforce-load-time-yolov11
    build:
      context: evaluation
      dockerfile: enforcement/Dockerfile.yolov11
    depends_on:
      - pickleball-enforce
    volumes:
      - ${BENIGN_MODELS}:/models/benign
      - ${MALICIOUS_MODELS}:/models/malicious
      - ./evaluation/policies/yolov11.json:/root/policies/policy.json
      - .:/pickleball
      - ./results:/results
    command: /pickleball/evaluation/enforcement/load_time.py --all-model-path /models/benign/yolov11 --output-dir /results/times.csv
