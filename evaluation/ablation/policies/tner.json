{
  "ner_model.py:<module>.TransformersNER": {
    "globals": [
      "collections.OrderedDict",
      "collections.Counter",
      "torch.nn.parameter.Parameter",
      "torch.nn.serialization._get_layout",
      "torch.Size",
      "torch.Tensor",
      "torch.device",
      "_codecs.encode",
      "builtins.bytearray",
      "torch.complex32",
      "torch.float8_e5m2",
      "torch.float8_e4m3fn",
      "torch.float8_e5m2fnuz",
      "torch.float8_e4m3fnuz",
      "torch.bits8",
      "torch.bits16",
      "torch.bits1x8",
      "torch.bits2x4",
      "torch.bits4x2",
      "torch.uint16",
      "torch.uint32",
      "torch.uint64",
      "torch.UntypedStorage",
      "torch.DoubleStorage",
      "torch.FloatStorage",
      "torch.LongStorage",
      "torch.IntStorage",
      "torch.ShortStorage",
      "torch.CharStorage",
      "torch.ByteStorage",
      "torch.HalfStorage",
      "torch.BoolStorage",
      "torch.QUInt8Storage",
      "torch.QInt8Storage",
      "torch.QInt32Storage",
      "torch.BFloat16Storage",
      "torch.ComplexFloatStorage",
      "torch.ComplexDoubleStorage",
      "torch.QUInt4x2Storage",
      "torch.QUInt2x4Storage",
      "torch.TypedStorage",
      "torch.per_tensor_affine",
      "torch.per_tensor_symmetric",
      "torch.per_channel_affine",
      "torch.per_channel_symmetric",
      "torch.per_channel_affine_float_qparams",
      "torch._utils._rebuild_parameter",
      "torch._utils._rebuild_parameter_with_state",
      "torch._utils._rebuild_qtensor",
      "torch._utils._rebuild_tensor",
      "torch._utils._rebuild_tensor_v2",
      "torch._utils._rebuild_tensor_v3",
      "torch._utils._rebuild_sparse_tensor",
      "torch._utils._rebuild_meta_tensor_no_storage",
      "torch._utils._rebuild_nested_tensor",
      "torch._utils._rebuild_wrapper_subclass",
      "torch._utils._rebuild_device_tensor_from_numpy",
      "torch._utils._rebuild_device_tensor_from_cpu_tensor",
      "torch._tensor._rebuild_from_type_v2"
    ],
    "reduces": [
      "collections.OrderedDict",
      "collections.Counter",
      "torch.nn.parameter.Parameter",
      "torch.nn.serialization._get_layout",
      "torch.Size",
      "torch.Tensor",
      "torch.device",
      "_codecs.encode",
      "builtins.bytearray",
      "torch.complex32",
      "torch.float8_e5m2",
      "torch.float8_e4m3fn",
      "torch.float8_e5m2fnuz",
      "torch.float8_e4m3fnuz",
      "torch.bits8",
      "torch.bits16",
      "torch.bits1x8",
      "torch.bits2x4",
      "torch.bits4x2",
      "torch.uint16",
      "torch.uint32",
      "torch.uint64",
      "torch.UntypedStorage",
      "torch.DoubleStorage",
      "torch.FloatStorage",
      "torch.LongStorage",
      "torch.IntStorage",
      "torch.ShortStorage",
      "torch.CharStorage",
      "torch.ByteStorage",
      "torch.HalfStorage",
      "torch.BoolStorage",
      "torch.QUInt8Storage",
      "torch.QInt8Storage",
      "torch.QInt32Storage",
      "torch.BFloat16Storage",
      "torch.ComplexFloatStorage",
      "torch.ComplexDoubleStorage",
      "torch.QUInt4x2Storage",
      "torch.QUInt2x4Storage",
      "torch.TypedStorage",
      "torch.per_tensor_affine",
      "torch.per_tensor_symmetric",
      "torch.per_channel_affine",
      "torch.per_channel_symmetric",
      "torch.per_channel_affine_float_qparams",
      "torch._utils._rebuild_parameter",
      "torch._utils._rebuild_parameter_with_state",
      "torch._utils._rebuild_qtensor",
      "torch._utils._rebuild_tensor",
      "torch._utils._rebuild_tensor_v2",
      "torch._utils._rebuild_tensor_v3",
      "torch._utils._rebuild_sparse_tensor",
      "torch._utils._rebuild_meta_tensor_no_storage",
      "torch._utils._rebuild_nested_tensor",
      "torch._utils._rebuild_wrapper_subclass",
      "torch._utils._rebuild_device_tensor_from_numpy",
      "torch._utils._rebuild_device_tensor_from_cpu_tensor",
      "torch._tensor._rebuild_from_type_v2"
    ]
  }
}