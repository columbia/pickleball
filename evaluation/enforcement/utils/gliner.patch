diff --git a/gliner/model.py b/gliner/model.py
index 5d8d730..524cea5 100644
--- a/gliner/model.py
+++ b/gliner/model.py
@@ -6,6 +6,8 @@ from tqdm import tqdm
 from pathlib import Path
 from typing import Dict, List, Optional, Union
 
+from pklballcheck import _pklball_accessed_attrs
+
 import onnxruntime as ort
 import torch
 from torch.utils.data import DataLoader
@@ -99,6 +101,14 @@ class GLiNER(nn.Module, PyTorchModelHubMixin):
         # to suppress an AttributeError when training
         self._keys_to_ignore_on_save = None
 
+    def __getattribute__(self, name):
+        _pklball_accessed_attrs.add(name)
+        return object.__getattribute__(self, name)
+
+    def __getattr__(self, name):
+        _pklball_accessed_attrs.add(name)
+        return super().__getattr__(name)
+
     def forward(self, *args, **kwargs):
         """Wrapper function for the model's forward pass."""
         output = self.model(*args, **kwargs)
@@ -809,7 +819,7 @@ class GLiNER(nn.Module, PyTorchModelHubMixin):
                     for key in f.keys():
                         state_dict[key] = f.get_tensor(key)
             else:
-                state_dict = torch.load(model_file, map_location=torch.device(map_location), weights_only=True)
+                state_dict = torch.load(model_file, map_location=torch.device(map_location), weights_only=False)
             gliner.model.load_state_dict(state_dict, strict=strict)
             gliner.model.to(map_location)
             if compile_torch_model and "cuda" in map_location:
