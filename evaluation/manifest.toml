title = "PickleBall Evaluation Manifest"

[system]

mem = 32    # Max system RAM to use, in GB. Set to 0 to use all available RAM.
libraries_dir = "libraries/"
cache_dir = "cache/"
policies_dir = "policies/"
joern_dir = "/joern/" # TODO: Make relative
analyzer_path = "/pickleball/analyze/analyze.sc" # TODO: Make relative

[libraries]

[libraries.conch]

library_path = "CONCH/conch"
model_class = "open_clip_custom/coca_model.py:<module>.CoCa"
use_cpg = false

[libraries.flagembedding]

library_path = "FlagEmbedding/FlagEmbedding"
model_class = "flag_models.py:<module>.FlagModel"
use_cpg = false

[libraries.flair]

library_path = "flair"
model_class = "flair/models/sequence_tagger_model.py:<module>.SequenceTagger"
use_cpg = false
ignore_paths = "flair/tests/,flair/examples/,flair/datasets"

[libraries.gliner]

library_path = "GLiNER/gliner"
model_class = "model.py:<module>.GLiNER"
use_cpg = false

[libraries.huggingsound]

library_path = "huggingsound/huggingsound"
model_class = "speech_recognition/model.py:<module>.SpeechRecognitionModel"
use_cpg = false

[libraries.languagebind]

library_path = "LanguageBind"
model_class = "languagebind/__init__.py:<module>.LanguageBind"
use_cpg = false

[libraries.melotts]

library_path = "MeloTTS/melo"
model_class = "api.py:<module>.TTS"
use_cpg = false

[libraries.pyannote]

library_path = "pyannote-audio"
model_class = "pyannote/audio/core/model.py:<module>.Model"
use_cpg = false
ignore_paths = "tests/,tutorials/"

[libraries.pysentimiento]

library_path = "pysentimiento"
model_class = "pysentimiento/analyzer.py:<module>.BaseAnalyzer"
use_cpg = false

[libraries.sentencetransformers]

library_path = "sentence-transformers/sentence_transformers"
model_class = "SentenceTransformer.py:<module>.SentenceTransformer"
use_cpg = false

[libraries.superimage]

library_path = "super-image/src"
model_class = "super_image/models/edsr/modeling_edsr.py:<module>.EdsrModel"
use_cpg = false

[libraries.tweetnlp]

library_path = "tweetnlp/tweetnlp"
model_class = "text_classification/model.py:<module>.Classifier"
use_cpg = false

[libraries.yolov5]

library_path = "yolov5/"
model_class = "yolov5/models/yolo.py:<module>.BaseModel"
use_cpg = false

[libraries.yolov11]

library_path = "yolov11"
model_class = "ultralytics/engine/model.py:<module>.Model"
use_cpg = false
ignore_paths = "tests/,docs/,docker/"

#[libraries.torch]
#
#library_path = "pytorch"
#model_class = "torch/nn/modules/module.py:<module>.Module"
#use_cpg = false
#ignore_paths = "android/,aten/,benchmarks/,binaries/,c10/,caffe2/,cmake/,docs/,functorch/,mypy_plugins/,scripts/,test/,third_party/,tools/,torchgen/"

[libraries.parrot]

library_path = "Parrot_Paraphraser"
model_class = "parrot/parrot.py:<module>.Parrot"
use_cpg = true

[libraries.tner]

library_path = "tner/tner"
model_class = "ner_model.py:<module>.TransformersNER"
use_cpg = true
